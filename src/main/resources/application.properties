spring.application.name=cpgrams-keycloak

spring.config.import=classpath:env.properties

server.port = 8082

spring.security.oauth2.client.registration.keycloak.client-id= cpgram-client
spring.security.oauth2.client.registration.keycloak.client-secret=g9DJUahc2JtcYVSvLgOnp1fLYIXy5x3L
spring.security.oauth2.client.registration.keycloak.scope= openid, profile, email
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/cpgrams
spring.security.oauth2.client.provider.keycloak.authorization-uri: http://localhost:8080/cpgrams/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri: http://localhost:8080/realms/cpgrams/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri: http://localhost:8080/realms/cpgrams/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri: http://localhost:8080/realms/cpgrams/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute: cpgram_user

jwt.auth.converter.principle-attribute = preferred_username
jwt.auth.converter.resource-id = cpgram-client

keycloak.admin.username=admin
keycloak.admin.password=admin
keycloak.realm=cpgrams


spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/cpgrams
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/cpgrams/protocol/openid-connect/certs

spring.security.oauth2.client.registration.google.client-id=${G_CLIENT}
spring.security.oauth2.client.registration.google.client-secret=${G_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile


spring.jpa.database=POSTGRESQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


spring.datasource.url=jdbc:postgresql://localhost:5432/cpgrams_db
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.auto-commit=false

logging.level.org.springframework.security=INFO
logging.level.org.keycloak=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.example.cpgrams=DEBUG